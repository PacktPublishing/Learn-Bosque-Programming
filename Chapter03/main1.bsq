namespace NSMain;

typedef UserId = /^[A-Z]-[a-z]{3}-(\d)+$/;

entity ComplexId provides Parsable {
    override static tryParse(value: String): Result<ComplexId, String> {
        if (value == "admin") {
            return ok(ComplexId@{});
        } else {
            return err("Invalid id");
        }
    }
}

entity User {
    field name: String;
    field id: StringOf<ComplexId>;
}

entity ApplicationContext {
    field emailServiceEnabled: Bool;
    field user: User;
}

function sendEmail(ctx: ApplicationContext): String {
    if (ctx.emailServiceEnabled) {
        return String::concat("Email sent to ", ctx.user.name, "!");
    } else {
        return "Email service disabled";
    }
}

function enableEmailService(ref context: ApplicationContext): ApplicationContext {
    context = context.update(emailServiceEnabled = true);
    return context;
}

entrypoint function main(): String {
    let user = User@{ name = "John Doe", id = ComplexId'admin' };
    var context = ApplicationContext@{
        emailServiceEnabled = false, user = user
    };

    context = enableEmailService(ref context);
    return sendEmail(context);
}
